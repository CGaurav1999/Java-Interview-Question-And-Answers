==========================================
          ðŸŒŸ Java Important Questions ðŸŒŸ
==========================================

1. ðŸ”¹ Object-Oriented Programming (OOP) Principles:
    ----------------------------------------
    - Abstraction
    - Encapsulation
    - Inheritance
    - Polymorphism

2. ðŸ”¹ Java Memory Management: Done
    ----------------------------------------
    - Stack vs Heap
    - Garbage Collection

3. ðŸ”¹ Exception Handling: Done
    ----------------------------------------
    - try-catch-finally
    - Custom exceptions
    - Checked vs Unchecked exceptions

4. ðŸ”¹ Multithreading & Concurrency:
    ----------------------------------------
    - Threads
    - Runnable
    - Synchronization
    - Executor Service
    - Thread safety
    - Deadlock
    - Locks (ReentrantLock, ReadWriteLock)
    - Concurrency utilities in java.util.concurrent:
        - CountDownLatch, Semaphore, etc.

5. ðŸ”¹ Java 8 Features:
    ----------------------------------------
    - Lambda expressions
    - Streams API
    - Default methods
    - Functional interfaces

6. ðŸ”¹ Access Modifiers: Done
    ----------------------------------------
    - public
    - private
    - protected
    - default (package-private)

7. ðŸ”¹ Java Collections Framework:
    ----------------------------------------
    - List, Set, Map, Queue, and their implementations:
        - ArrayList, LinkedList, HashSet, TreeSet, HashMap, etc.
    - Comparison of different Collection types in terms of time complexity:
        - Lookup, Insert, Delete, etc.

8. ðŸ”¹ Generics:
    ----------------------------------------
    - Generic methods
    - Wildcards (? extends, ? super)
    - Bounded types

9. ðŸ”¹ Java I/O and NIO:
    ----------------------------------------
    - File handling:
        - FileReader, FileWriter, BufferedReader, BufferedWriter, etc.
    - NIO buffers, channels, and selectors

10. ðŸ”¹ JVM Internals:
    ----------------------------------------
    - Classloading
    - Just-in-time (JIT) compilation
    - JVM garbage collector algorithms:
        - G1, ParallelGC, CMS, ZGC
    - HotSpot

11. ðŸ”¹ Java Performance Tuning:
    ----------------------------------------
    - Memory leaks
    - JVM heap dumps
    - Profiling
    - Thread dumps

12. ðŸ”¹ Version Control:
    ----------------------------------------
    - Git:
        - Branching
        - Merging
        - Rebase
        - Pull Requests

13. ðŸ”¹ Build Tools:
    ----------------------------------------
    - Maven
    - Gradle

14. ðŸ”¹ CI/CD:
    ----------------------------------------
    - Jenkins
    - GitLab CI
    - Travis CI

15. ðŸ”¹ String:
    ----------------------------------------
    - Memory Use
    - StringBuilder
    - StringBuffer

16. ðŸ”¹ Interface vs Abstract Class:
    ----------------------------------------
    - Difference
    - Use
    - Critical Questions

==========================================
